---
parameters:
  - name: serviceName
    type: string

  - name: projectPath
    type: string

  - name: testsProjectPath
    type: string
    default: ''

  - name: infrastructureProjectPath
    type: string
    default: ''

  - name: 'preTest'
    type: stepList
    default: []

  - name: dockerFile
    type: string

  - name: repositoryName
    type: string

  - name: chartPath
    type: string
    default: 'builds/kubernetes/charts'

  - name: chartName
    type: string

  # - name: debugPipelineFlow
  #   type: boolean
  #   default: false

stages:

  # ---------------------------------------------------------------------------
  # Build and tests service
  # ---------------------------------------------------------------------------
  - stage: BuildApplication
    displayName: Build Service
    jobs:
      - job: DotnetBuild
        displayName: Build Service

        steps:
          - checkout: self
            fetchDepth: 0

          - template: ./steps/versioning-ci-steps.yaml

          - template: ./steps/dotnet-ci-steps.yaml
            parameters:
              serviceName:       ${{ parameters.serviceName }}
              projectPath:       ${{ parameters.projectPath }}
              # debugPipelineFlow: ${{ parameters.debugPipelineFlow }}

      - ${{ if parameters.testsProjectPath }}:
        - job: DotnetUnitTests
          displayName: Tests Service
          dependsOn:
            - DotnetBuild

          steps:
            - template: ./steps/dotnet-unittests-ci-steps.yaml
              parameters:
                serviceName:       ${{ parameters.serviceName }}
                projectPath:       ${{ parameters.projectPath }}
                testsProjectPath:  ${{ parameters.testsProjectPath }}
                preTest:           ${{ parameters.preTest }}
                # debugPipelineFlow: ${{ parameters.debugPipelineFlow }}

  # ---------------------------------------------------------------------------
  # Build Container image and chart
  # - Build when Pull request to Master or branch != feature/, topic/, hotfix/
  # ---------------------------------------------------------------------------

  # - ${{ if or(
  #             and(eq(variables['Build.Reason'],'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'refs/heads/master')),
  #             not(contains(variables['System.PullRequest.TargetBranch'],'refs/heads/feature/')),
  #             not(contains(variables['System.PullRequest.TargetBranch'],'refs/heads/topic/')),
  #             not(contains(variables['System.PullRequest.TargetBranch'],'refs/heads/hotfix/'))
  #             )}}
  - ${{ if not(contains(variables['System.PullRequest.TargetBranch'], 'refs/heads/feature/')) }}
    - stage: BuildImages
      displayName: Build image and chart
      dependsOn:
        - BuildApplication

      jobs:
        - job: DockerBuild
          displayName: Build and publish docker images
          variables:
            tag: $(Build.BuildId)

          steps:
            - template: ./steps/container-ci-steps.yaml
              parameters:
                serviceName:       ${{ parameters.serviceName }}
                repositoryName:    ${{ parameters.repositoryName }}
                dockerFile:        ${{ parameters.dockerFile }}
                dockerTags:        $(tag)
                # debugPipelineFlow: ${{ parameters.debugPipelineFlow }}

        - job: HelmBuild
          displayName: Build and publish Helm chart
          dependsOn:
            - DockerBuild

          variables:
            tag: $(Build.BuildId)

          steps:
            - template: ./steps/chart-ci-steps.yaml
              parameters:
                serviceName:       ${{ parameters.serviceName }}
                chartPath:         ${{ parameters.chartPath }}
                chartName:         ${{ parameters.chartName }}
                chartVersion:      $(tag)
                # debugPipelineFlow: ${{ parameters.debugPipelineFlow }}

  # ---------------------------------------------------------------------------
  # Build Databases scripts
  # ---------------------------------------------------------------------------
  - ${{ if parameters.infrastructureProjectPath }}:
    - stage: BuildDbScripts
      displayName: Build database scripts
      dependsOn:
        - BuildApplication

      jobs:
        - job: DatabaseBuild
          displayName: Build database scripts
          variables:
            tag: $(Build.BuildId)

          steps:
            - template: ./steps/databases-ci-steps.yaml
              parameters:
                serviceName:               ${{ parameters.serviceName }}
                projectPath:               ${{ parameters.projectPath }}
                infrastructureProjectPath: ${{ parameters.infrastructureProjectPath }}
                # debugPipelineFlow:         ${{ parameters.debugPipelineFlow }}

