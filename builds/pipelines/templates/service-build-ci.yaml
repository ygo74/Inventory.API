---
parameters:
  - name: serviceName
    type: string

  - name: projectPath
    type: string

  - name: testsProjectPath
    type: string
    default: ''

  - name: infrastructureProjectPath
    type: string
    default: ''

  - name: 'preTest'
    type: stepList
    default: []

  - name: dockerFile
    type: string

  - name: repositoryName
    type: string

  - name: chartPath
    type: string
    default: 'builds/kubernetes/charts'

  - name: chartName
    type: string

  - name: containerRegistry
    type: string
    default: 'aksbootstrap'

  - name: containerRegistryFqdn
    type: string
    default: 'aksbootstrap.azurecr.io'

  # - name: debugPipelineFlow
  #   type: boolean
  #   default: false

stages:

  # ---------------------------------------------------------------------------
  # Build and tests service
  # ---------------------------------------------------------------------------
  - stage: BuildApplication
    displayName: Build Service
    jobs:
      # ---------------------------------------------------------------------------
      # Identify Build context
      # - Calcul the next artefact / docker image version
      # ---------------------------------------------------------------------------
      - job: IdentifyContext
        displayName: Identify build context

        steps:
          - checkout: self
            fetchDepth: 0

          - task: CalculateNextVersionTest@1
            name: CalculateNextVersion
            displayName: Determine Version
            inputs:
              configurationLocation: 'configurationPath'
              configurationPath: './VersionManagement.yml'


      # ---------------------------------------------------------------------------
      # Build dotnet applications
      # - Update build number with next version and unique counter
      # - Build application
      # ---------------------------------------------------------------------------
      - job: DotnetBuild
        displayName: Build Service
        dependsOn:
          - IdentifyContext

        variables:
          NextVersion: $[ dependencies.IdentifyContext.outputs['CalculateNextVersion.version'] ]
          BuildCounter: $[counter(variables['NextVersion'], 0)]

        steps:
          - checkout: self
            fetchDepth: 0

          - task: PublishBuildNumber@0
            name: PublishBuildNumber
            displayName: Publish build numbers
            inputs:
              semanticVersioning: '$(NextVersion)'
              uniqueCounter: '$(BuildCounter)'

          - template: ./steps/dotnet-ci-steps.yaml
            parameters:
              serviceName:       ${{ parameters.serviceName }}
              projectPath:       ${{ parameters.projectPath }}
              # debugPipelineFlow: ${{ parameters.debugPipelineFlow }}

      - ${{ if parameters.testsProjectPath }}:
        # ---------------------------------------------------------------------------
        # Execute unit tests
        # ---------------------------------------------------------------------------
        - job: DotnetUnitTests
          displayName: Tests Service
          dependsOn:
            - DotnetBuild

          steps:
            - template: ./steps/dotnet-unittests-ci-steps.yaml
              parameters:
                serviceName:       ${{ parameters.serviceName }}
                projectPath:       ${{ parameters.projectPath }}
                testsProjectPath:  ${{ parameters.testsProjectPath }}
                preTest:           ${{ parameters.preTest }}
                # debugPipelineFlow: ${{ parameters.debugPipelineFlow }}

  # ---------------------------------------------------------------------------
  # Build Container image and chart
  # - Build when Pull request to Master or branch != feature/, topic/, hotfix/
  # ---------------------------------------------------------------------------
  - ${{ if or(not(or(startsWith(variables['Build.SourceBranch'],'refs/heads/feature/'), startsWith(variables['Build.SourceBranch'],'refs/heads/topic/'), startsWith(variables['Build.SourceBranch'],'refs/heads/hotfix/'))), and(eq(variables['Build.Reason'],'PullRequest'), eq(variables['System.PullRequest.TargetBranchName'], 'master'))) }}:
    - stage: BuildImages
      displayName: Build image and chart
      dependsOn:
        - BuildApplication

      jobs:
        # ---------------------------------------------------------------------------
        # Build and publish container image
        # ---------------------------------------------------------------------------
        - job: DockerBuild
          displayName: Build and publish docker images
          variables:
            tag: $[ stageDependencies.BuildApplication.DotnetBuild.outputs['PublishBuildNumber.CleanedVersion'] ]

          steps:
            - template: ./steps/container-ci-steps.yaml
              parameters:
                serviceName:           ${{ parameters.serviceName }}
                repositoryName:        ${{ parameters.repositoryName }}
                dockerFile:            ${{ parameters.dockerFile }}
                dockerTags:            $(tag)
                containerRegistry:     ${{ parameters.containerRegistry }}
                containerRegistryFqdn: ${{ parameters.containerRegistryFqdn }}
                # debugPipelineFlow: ${{ parameters.debugPipelineFlow }}

        # ---------------------------------------------------------------------------
        # Build an dpublish helm chart
        # ---------------------------------------------------------------------------
        - job: HelmBuild
          displayName: Build and publish Helm chart
          dependsOn:
            - DockerBuild

          variables:
            tag: $[ stageDependencies.BuildApplication.DotnetBuild.outputs['PublishBuildNumber.SemanticVersion'] ]

          steps:
            - template: ./steps/chart-ci-steps.yaml
              parameters:
                serviceName:           ${{ parameters.serviceName }}
                chartPath:             ${{ parameters.chartPath }}
                chartName:             ${{ parameters.chartName }}
                chartVersion:          $(tag)
                containerRegistry:     ${{ parameters.containerRegistry }}
                containerRegistryFqdn: ${{ parameters.containerRegistryFqdn }}
                # debugPipelineFlow: ${{ parameters.debugPipelineFlow }}

  # ---------------------------------------------------------------------------
  # Build Databases scripts
  # ---------------------------------------------------------------------------
  - ${{ if parameters.infrastructureProjectPath }}:
    - stage: BuildDbScripts
      displayName: Build database scripts
      dependsOn:
        - BuildApplication

      jobs:
        - job: DatabaseBuild
          displayName: Build database scripts
          variables:
            tag: $(Build.BuildId)

          steps:
            - template: ./steps/databases-ci-steps.yaml
              parameters:
                serviceName:               ${{ parameters.serviceName }}
                projectPath:               ${{ parameters.projectPath }}
                infrastructureProjectPath: ${{ parameters.infrastructureProjectPath }}
                # debugPipelineFlow:         ${{ parameters.debugPipelineFlow }}

