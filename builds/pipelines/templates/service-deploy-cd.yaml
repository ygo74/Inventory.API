---
parameters:
  - name: aksResourceGroup
    type: string

  - name: aksName
    type: string

  - name: serviceName
    type: string

  - name: hasDatabase
    type: boolean
    default: true

  - name: databaseName
    type: string
    default: ''

  - name: databaseUserName
    type: string
    default: ''

  - name: databaseUserPassword
    type: string
    default: ''

  - name: resourcePipelineId
    type: int
    default: 0

stages:

  - stage: deployTests
    # dependsOn:
    #   - BuildImages

    jobs:
      - deployment: deployTests
        # pool:
        #   vmImage: 'ubuntu-16.04'
        environment: Dynamic-Inventory-Tests
        strategy:
          runOnce:
            ${{ if parameters.hasDatabase }}:
              preDeploy:
                steps:

                  - template: ./steps/databases-cd-steps.yaml
                    parameters:
                      aksResourceGroup:     ${{ parameters.aksResourceGroup }}
                      aksName:              ${{ parameters.aksName }}
                      serviceName:          ${{ parameters.serviceName }}
                      databaseName:         ${{ parameters.databaseName }}
                      databaseUserName:     ${{ parameters.databaseUserName }}
                      databaseUserPassword: ${{ parameters.databaseUserPassword }}
                      resourcePipelineId:   ${{ parameters.resourcePipelineId }}

            deploy:
              steps:

                - template: ./steps/chart-cd-steps.yaml
