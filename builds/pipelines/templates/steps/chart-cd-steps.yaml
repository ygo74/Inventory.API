---
parameters:
  - name: aksResourceGroup
    type: string

  - name: aksName
    type: string

  - name: serviceName
    type: string

  - name: chartName
    type: string

  - name: artifactVersionNumber
    type: string

  - name: containerRegistry
    type: string
    default: 'aksbootstrap'

  - name: containerRegistryFqdn
    type: string
    default: 'aksbootstrap.azurecr.io'

  - name: databaseName
    type: string

  - name: databaseUserName
    type: string

  - name: databaseUserPassword
    type: string

  - name: debugPipelineFlow
    type: boolean
    default: false


steps:

  - ${{ if parameters.debugPipelineFlow }}:
    - task: Bash@3
      displayName: Display environment variables
      inputs:
        targetType: 'inline'
        script: |
          export

  - checkout: self
    displayName: "Checkout repository"

  - task: HelmInstaller@0
    displayName: Install Helm tools
    inputs:
      helmVersion: '3.8.0'
      checkLatestHelmVersion: false
      installKubectl: true
      kubectlVersion: '1.26.3'


  - task: AzureCLI@2
    displayName: Deploy chart to CLuster
    inputs:
      azureSubscription: 'Ansible-Automation'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      addSpnToEnvironment: true
      useGlobalConfig: true
      inlineScript: |

        # Get credentials for the AKS cluster
        az aks get-credentials --resource-group ${{ parameters.aksResourceGroup }} --name ${{ parameters.aksName }}

        # Init User Name / token password
        USER_NAME="00000000-0000-0000-0000-000000000000"
        password=$(az acr login -n ${{ parameters.containerRegistry }} --expose-token --output tsv --query accessToken)

        # install helm chart from registry
        helm registry login ${{ parameters.containerRegistryFqdn }} --username $USER_NAME --password $password
        helm upgrade ${{ parameters.serviceName }} oci://${{ parameters.containerRegistryFqdn }}/helm/dynamic-inventory/${{ parameters.chartName }} \
            --create-namespace \
            --install \
            --namespace dynamic-inventory \
            --version ${{ parameters.artifactVersionNumber }} \
            --set image.tag=${{ parameters.artifactVersionNumber }} \
            --set postgres.host=postgresql.postgresql \
            --set postgres.database=${{ parameters.databaseName }} \
            --set postgres.user=${{ parameters.databaseUserName }} \
            --set postgres.password=$DB_PASSWORD

    env:
      DB_PASSWORD: ${{ parameters.databaseUserPassword }}
