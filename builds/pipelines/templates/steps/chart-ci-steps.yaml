---
# -----------------------------------------------------------------------------
# Chart build
# -----------------------------------------------------------------------------
parameters:
  - name: serviceName
    type: string

  - name: chartPath
    type: string

  - name: chartName
    type: string

  - name: chartVersion
    type: string

  # - name: debugPipelineFlow
  #   type: boolean
  #   default: false

steps:

  - ${{ if eq(variables['System.debug'], 'true') }}:
    - task: Bash@3
      displayName: Display environment variables
      inputs:
        targetType: 'inline'
        script: |
          export

  - task: HelmInstaller@0
    displayName: Install Helm tools
    inputs:
      helmVersion:            '3.8.0'
      kubectlVersion:         '1.26.3'
      checkLatestHelmVersion: false
      installKubectl:         true

  - task: HelmDeploy@0
    displayName: Package helm chart
    inputs:
      command:   'package'
      chartPath: '${{ parameters.chartPath}}/${{ parameters.chartName}}'

  - task: AzureCLI@2
    displayName: Save chart into ACR
    inputs:
      azureSubscription: 'Ansible-Automation'
      scriptType:        'pscore'
      scriptLocation:    'inlineScript'
      inlineScript: |
        # Init User Name / token password
        $USER_NAME="00000000-0000-0000-0000-000000000000"
        $password=az acr login -n aksbootstrap --expose-token --output tsv --query accessToken

        # Push helm chart to registry
        helm registry login aksbootstrap.azurecr.io --username $USER_NAME --password $password
        helm push $(Build.ArtifactStagingDirectory)/${{ parameters.chartName }}-0.1.0.tgz oci://aksbootstrap.azurecr.io/helm/dynamic-inventory

      addSpnToEnvironment: true
      useGlobalConfig: true
