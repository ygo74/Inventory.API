---
# -----------------------------------------------------------------------------
# Deploy Database
# -----------------------------------------------------------------------------
steps:
  - checkout: self
    displayName: "Checkout repository"

  - task: AzureCLI@2
    displayName: "Copy databases script files"
    inputs:
      azureSubscription: 'Ansible-Automation'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Get credentials
        az aks get-credentials --resource-group rg-aks-bootstrap-networking-spoke --name aksbootstrap --admin

        # Copy files to pods
        kubectl cp ./databases/configuration/createUsers.sql  postgresql-0:/tmp/createUsers.sql -c postgresql -n postgresql
        kubectl cp ./databases/configuration/configurationDB.sql  postgresql-0:/tmp/configurationDB.sql -c postgresql -n postgresql
        kubectl cp ./databases/configuration/grantUsers.sql  postgresql-0:/tmp/grantUsers.sql -c postgresql -n postgresql

  - task: Kubernetes@1
    displayName: "Create User"
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'Ansible-Automation'
      azureResourceGroup: 'rg-aks-bootstrap-networking-spoke'
      kubernetesCluster: 'aksbootstrap'
      namespace: 'postgresql'
      command: 'exec'
      arguments: >-
        postgresql-0 -c postgresql -n postgresql
        -- psql postgresql://inventorydb-admin:$(inventorydb-admin)@postgresql/ConfigurationDB
        -f /tmp/createUsers.sql

  - task: Kubernetes@1
    displayName: "Set User password"
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'Ansible-Automation'
      azureResourceGroup: 'rg-aks-bootstrap-networking-spoke'
      kubernetesCluster: 'aksbootstrap'
      namespace: 'postgresql'
      command: 'exec'
      arguments: >-
        postgresql-0 -c postgresql -n postgresql
        -- psql postgresql://inventorydb-admin:$(inventorydb-admin)@postgresql/ConfigurationDB
        -c "ALTER USER configurationdb_rw WITH PASSWORD '$(configurationdb-rw)'"

  - task: Kubernetes@1
    displayName: "Create Database objects"
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'Ansible-Automation'
      azureResourceGroup: 'rg-aks-bootstrap-networking-spoke'
      kubernetesCluster: 'aksbootstrap'
      namespace: 'postgresql'
      command: 'exec'
      arguments: >-
        postgresql-0 -c postgresql -n postgresql
        -- psql postgresql://inventorydb-admin:$(inventorydb-admin)@postgresql/ConfigurationDB
        -f /tmp/configurationDB.sql

  - task: Kubernetes@1
    displayName: "Grant users to Database objects"
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'Ansible-Automation'
      azureResourceGroup: 'rg-aks-bootstrap-networking-spoke'
      kubernetesCluster: 'aksbootstrap'
      namespace: 'postgresql'
      command: 'exec'
      arguments: >-
        postgresql-0 -c postgresql -n postgresql
        -- psql postgresql://inventorydb-admin:$(inventorydb-admin)@postgresql/ConfigurationDB
        -f /tmp/grantUsers.sql
