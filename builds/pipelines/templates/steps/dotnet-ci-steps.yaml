---
# -----------------------------------------------------------------------------
# Dotnet build
# -----------------------------------------------------------------------------
parameters:
  - name: serviceName
    type: string

  - name: projectPath
    type: string

  - name: debugPipelineFlow
    type: boolean
    default: true

steps:
  - ${{ if parameters.debugPipelineFlow }}:
    - task: Bash@3
      displayName: Display environment variables
      inputs:
        targetType: 'inline'
        script: |
          export

  - task: PowerShell@2
    displayName: Set project directory path
    inputs:
      targetType: 'inline'
      script: |
        # Get project directory path
        $projectPath = "${{ parameters.projectPath }}"
        $directoryPath = Get-Item -Path $projectPath | Select-Object -ExpandProperty Directory | Resolve-Path | Select-Object -ExpandProperty Path
        echo "Project directory path : $directoryPath"
        echo "##vso[task.setvariable variable=directoryPath]$directoryPath"

      failOnStderr: true
      pwsh: true

  - task: DotNetCoreCLI@2
    displayName: Build ${{ parameters.serviceName }}
    inputs:
      command: 'build'
      projects: '${{ parameters.projectPath }}'
      versioningScheme: byEnvVar
      versionEnvVar: 'CalculateNextVersion.version'

  - task: SnykSecurityScan@1
    inputs:
      serviceConnectionEndpoint: 'Snyk'
      testType:                  'app'
      severityThreshold:         'high'
      monitorWhen:               'always'
      failOnIssues:              true
      projectName:               '${{ parameters.serviceName }}'
      organization:              'ygo74'
      testDirectory:             '$(directoryPath)'

  - task: DotNetCoreCLI@2
    displayName: Publish ${{ parameters.serviceName }}
    inputs:
      command: 'publish'
      projects: '$(directoryPath)/*.csproj'
      versioningScheme: byEnvVar
      versionEnvVar: 'CalculateNextVersion.version'
      arguments: '-o $(Build.ArtifactStagingDirectory)/services/${{ parameters.serviceName }}'
      zipAfterPublish: true
      modifyOutputPath: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ${{ parameters.serviceName }}'
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)/services/${{ parameters.serviceName }}
      ArtifactName: Service
